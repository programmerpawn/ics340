Indegree: 
A has indegree [Edge@6380cf89, Edge@3540cf5f, Edge@769f0240]
B has indegree [Edge@273f0319, Edge@42266cf0]
C has indegree [Edge@71af69dc, Edge@7f2cf8ab, Edge@20540b9c, Edge@5164b28a]
D has indegree [Edge@5b0fc0f3, Edge@437e8299]
E has indegree [Edge@43767981, Edge@37727387]

Outdegree: 
A has outdegree [Edge@273f0319, Edge@71af69dc, Edge@43767981]
B has outdegree [Edge@6380cf89, Edge@7f2cf8ab, Edge@5b0fc0f3]
C has outdegree [Edge@3540cf5f]
D has outdegree [Edge@769f0240, Edge@20540b9c, Edge@37727387]
E has outdegree [Edge@42266cf0, Edge@5164b28a, Edge@437e8299]


	private class NodeComparer implements Comparator<Node>{
		public int compare(Node o1, Node o2) {
			return o1.getName().compareToIgnoreCase(o2.getName());
		}
	}
